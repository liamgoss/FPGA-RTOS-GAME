/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"
#include "sys/alt_irq.h"
#include "altera_avalon_timer_regs.h"
#include "altera_avalon_timer.h"
#include "Altera_UP_SD_Card_Avalon_Interface.h"


short int tfile;
void SD_init();
int SD_read();
void SD_write(int);

//initializing SD card for read/write
void SD_init()
{
	alt_up_sd_card_open_dev("/dev/SD_Card");
	if(alt_up_sd_card_is_FAT16())
		printf("Fat16 detected\n");
}

//read SD card
int SD_read()
{
	int retval;
	char zero = '0';
	char temp;
	temp = alt_up_sd_card_read(tfile);
	retval = temp - zero;
	return retval;
}

//write SD card
void SD_write(int in)
{
	char zero = '0';
	char intchar;
	intchar = in + zero;
	alt_up_sd_card_write(tfile, intchar);
}


#define SECTOR_SIZE 512

// Function to read a sector from the SD card
int read_sector(const char *file_path, int sector_number, char *buffer) {
    FILE *file = fopen(file_path, "rb");

    if (file == NULL) {
        perror("Error opening file");
        return -1;
    }

    // Seek to the specified sector
    fseek(file, sector_number * SECTOR_SIZE, SEEK_SET);

    // Read the sector into the buffer
    size_t bytesRead = fread(buffer, 1, SECTOR_SIZE, file);

    fclose(file);

    if (bytesRead != SECTOR_SIZE) {
        perror("Error reading sector");
        return -1;
    }

    return 0;
}

int main() {
    const char *file_path = "/dev/SD_Card";  // Replace with the actual path to your SD card image

    // Assuming the text file is in sector 644
    int sector_number = 644;

    char buffer[SECTOR_SIZE];

    // Read the sector from the SD card
    if (read_sector(file_path, sector_number, buffer) == 0) {
        // Output the content to the console
        printf("Sector %d content:\n", sector_number);
        for (int i = 0; i < SECTOR_SIZE; i++) {
            putchar(buffer[i]);
        }
        printf("\n");
    }

    return 0;
}
